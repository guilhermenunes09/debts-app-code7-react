[{"/Users/guilherme/codes/debts-app-code7-react/src/reportWebVitals.js":"1","/Users/guilherme/codes/debts-app-code7-react/src/App.js":"2","/Users/guilherme/codes/debts-app-code7-react/src/index.js":"3","/Users/guilherme/codes/debts-app-code7-react/src/pages/clients/index.jsx":"4","/Users/guilherme/codes/debts-app-code7-react/src/components/fetchData.jsx":"5","/Users/guilherme/codes/debts-app-code7-react/src/components/clientCard.jsx":"6","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/new.jsx":"7","/Users/guilherme/codes/debts-app-code7-react/src/components/postData.jsx":"8","/Users/guilherme/codes/debts-app-code7-react/src/apiAccess/config.js":"9","/Users/guilherme/codes/debts-app-code7-react/src/pages/navigation/nav.jsx":"10","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/debtsList.jsx":"11","/Users/guilherme/codes/debts-app-code7-react/src/contexts/currentClient.js":"12","/Users/guilherme/codes/debts-app-code7-react/src/components/deleteData.jsx":"13"},{"size":362,"mtime":1609639944000,"results":"14","hashOfConfig":"15"},{"size":2081,"mtime":1609964898000,"results":"16","hashOfConfig":"15"},{"size":543,"mtime":1609641051000,"results":"17","hashOfConfig":"15"},{"size":355,"mtime":1609948403000,"results":"18","hashOfConfig":"15"},{"size":783,"mtime":1609965422000,"results":"19","hashOfConfig":"15"},{"size":551,"mtime":1609948281000,"results":"20","hashOfConfig":"15"},{"size":6349,"mtime":1609964400000,"results":"21","hashOfConfig":"15"},{"size":828,"mtime":1609958989000,"results":"22","hashOfConfig":"15"},{"size":379,"mtime":1609965301000,"results":"23","hashOfConfig":"15"},{"size":195,"mtime":1609900174000,"results":"24","hashOfConfig":"15"},{"size":1282,"mtime":1609962080000,"results":"25","hashOfConfig":"15"},{"size":83,"mtime":1609947801000,"results":"26","hashOfConfig":"15"},{"size":715,"mtime":1609963635000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xasyye",{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/guilherme/codes/debts-app-code7-react/src/reportWebVitals.js",[],["62","63"],"/Users/guilherme/codes/debts-app-code7-react/src/App.js",["64","65","66","67","68","69","70","71"],"\nimport React, { useState, useEffect, createContext } from 'react'\nimport './App.css';\n\nimport { API_JSON } from './apiAccess/config.js';\nimport { axiosGet } from './components/fetchData.jsx';\n\n/* Pages with Components */\nimport ClientsIndex from './pages/clients/index';\nimport DebtsNew from './pages/debts/new';\n\nimport Nav from './pages/navigation/nav.jsx';\n\n\nconst selectedIdContext = createContext();\nexport const selectedIdConsumer = selectedIdContext.Consumer;\n\nfunction App() {\n\n  const [clientsTable, setClientsTable] = useState([]);\n  const [selectedId, setSelectedId] = useState([]);\n\n  const getData = () => {\n    axiosGet(API_JSON).then(res => {\n      setClientsTable(res);\n    });\n  }\n\n  useEffect( \n    () => {\n      getData();\n    \n    },[]\n  );\n\n  useEffect(()=>{\n    console.log(\"Clients\");\n    console.log(clientsTable);\n  },[clientsTable])\n\n  return (\n      <div className=\"App\">\n\n\n        <nav class=\"navbar navbar-dark bg-dark mb-4\">\n          <a class=\"navbar-brand\" href=\"#\">Debts App</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\">Início<span class=\"sr-only\">(current)</span></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Registrar</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Login</a>\n              </li>\n            </ul>\n            <span class=\"navbar-text\">\n              \n            </span>\n          </div>\n        </nav>\n        <h1>Adicionar Dívida</h1>\n        <DebtsNew clientsProp={clientsTable} />\n        \n        {/* <ClientsIndex clientsProp={clientsTable}/> */}\n      </div>\n  );\n}\n\nexport default App;\n",["72","73"],"/Users/guilherme/codes/debts-app-code7-react/src/index.js",[],["74","75"],"/Users/guilherme/codes/debts-app-code7-react/src/pages/clients/index.jsx",[],["76","77"],"/Users/guilherme/codes/debts-app-code7-react/src/components/fetchData.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/components/clientCard.jsx",["78","79"],"import React, { useEffect } from 'react';\nimport \"./styles/clientCard.css\"\n\n// To be in the Debts Index\n\nfunction ClientCard (props) {\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{props.clientCard.name}</h5>\n          <p className=\"card-text\">{props.clientCard.username}</p>\n          <p className=\"card-text\">{props.clientCard.website}</p>\n          <a href=\"#\" class=\"btn btn-primary\">Visitar</a>\n        </div>\n      </div>\n    </>\n  );\n}\n  \nexport default ClientCard;\n  ","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/new.jsx",["80","81","82","83"],"import React, { useState, useEffect, useRef, createContext } from 'react';\nimport DebtsList from './debtsList.jsx';\nimport { axiosPost } from '../../components/postData.jsx';\nimport { axiosGet } from '../../components/fetchData.jsx';\nimport { axiosDelete } from '../../components/deleteData.jsx';\nimport { API_JSON, API_RAILS } from '../../apiAccess/config.js';\nimport '../../components/styles/debtsNew.css';\nimport { currentClient } from '../../contexts/currentClient.js';\n\n// This Component it's both visualization and editing, depending\n// on whether the client ID is 0 or different than 0           \n// if 0, the component 'thinks' that the user wants to create a new record  \n\nfunction DebtsNew (props) {\n\n    /* Declaring Component States */\n    let [id, setId] = useState(0);\n    let [idArray, setIdArray] = useState(0);\n    let [debtList, setDebtList] = useState();\n    let [clientData, setClientData] = useState({\n        reason: \" \",\n        amount: 0.00,\n        when: \"00-00-0000\",\n    });\n\n    useEffect(()=> {\n        if(debtList && typeof debtList[idArray] !== \"undefined\") {\n            const dl = debtList[idArray];\n            const clientData = {\n                reason: dl.reason,\n                amount: dl.amount,\n                when: dl.when,\n            }\n            setClientData(clientData);\n        }\n    },[idArray]);\n\n    /* Request List from Local Server API */\n    useEffect(()=> {\n        axiosGet(API_RAILS).then(response => {\n            setDebtList(response);\n        });\n    },[]);\n\n    /* Declaring Form references */\n    const inputClient = useRef(null);  const inputReason = useRef(null);\n    const inputAmount = useRef(null);   const inputWhen = useRef(null);\n\n    /* Get Form Data and Send it to local API */\n    const handleClick = () => {       \n        const selected = inputClient.current.selectedIndex;\n        const myClient = inputClient.current[selected].getAttribute(\"data-value\");\n        const dataPost = {\n            id: id,\n            reason:inputReason.current.value,\n            amount:inputAmount.current.value,\n            when:inputWhen.current.value,\n            client: myClient\n        };\n        axiosPost(dataPost, API_RAILS).then((response) => {\n            if(response.status === 200) {\n                setDebtList(debtList => [...debtList, response.data.debt]);\n\n            } else {\n                console.log(\"Requisição ao servidor retornou uma falha.\");\n            }\n        });\n    }\n\n    const handleClickExclude = () => {\n        axiosDelete(API_RAILS, id).then(response => {\n            if(response.status == 200) {\n                console.log(\"Sucesso!\");\n            } else {\n                console.log(\"Falhou!\");\n            }\n        });\n    }\n     \n\n    /* Use Context Config */\n    let value = {\n        id: id,\n        idArray: idArray,\n        updateClientId: updateClientId,\n        updateArrayId: updateArrayId,\n        debtList: debtList,\n    }\n\n    function updateClientId (key=1, id) {\n        setId(id);\n     }\n     function updateArrayId (key=32, idArray) {\n         setIdArray(idArray);\n     }\n\n     function setIdToZero (key=39, id=0) {\n         setId(id);\n         setIdArray(id);\n         setClientData({\n            reason: \" \",\n            amount: 0.00,\n            when: \"00-00-0000\",\n         });\n         \n     }\n\n\n    return(\n        <currentClient.Provider value={{value}}>\n            {id}\n            <button onClick={setIdToZero} class=\"button button-new\"></button>\n            <div className=\"container text-left\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3 border border-danger\">\n                        <DebtsList clientsProp={props.clientsProp} />\n                    </div>\n                    <div className=\"col-sm-9 border border-warning\">\n                        <div className=\"debt-new d-flex p-4 m-2 border border-info bd-highlight\">\n                            <form key={id}>\n                                <select defaultValue={idArray || ''} ref={inputClient} className=\"form-control form-control-lg\">\n                                    <option disabled={true} value=\"\">Escolha um cliente</option>\n                                    {props.clientsProp && props.clientsProp.map(function (item, i) {\n                                        return <option value={i} data-value={JSON.stringify(item)}>{item.name}</option>\n                                    })}\n                                </select>\n                                <div className=\"form-group\">\n                                    <label for=\"formGroupExampleInput\">Motivo</label>\n                                    <input defaultValue={clientData.reason} ref={inputReason} type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"formGroupExampleInput\" class=\"mr-sm-2\">Valor</label>\n                                    <div className=\"form-inline\">\n                                        <input defaultValue={clientData.amount}  ref={inputAmount} type=\"number\" min=\"0.00\" max=\"9000000.00\" step=\"0.01\" class=\"form-control mb-2 mr-sm-2\" id=\"formGroupExampleInput\" placeholder=\"R$\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"formGroupExampleInput\" class=\"mr-sm-2\">Data</label>\n                                    <div className=\"form-inline\">\n                                        <input defaultValue={clientData.when}  ref={inputWhen} type=\"date\" class=\"form-control mb-2 mr-sm-2\" id=\"formGroupExampleInput\" placeholder=\"Ex: 10-12-2020\" />\n                                    </div>\n                                </div>\n                                <button onClick={handleClickExclude} type=\"button\" class=\"btn btn-outline-secondary\">Excluir</button>\n                                <button onClick={handleClick} type=\"button\" class=\"btn btn-outline-primary\">Salvar</button>\n                            </form>\n                        </div>\n                    </div>    \n                </div>\n            </div>\n        </currentClient.Provider>\n    )\n}\n\nexport default DebtsNew;","/Users/guilherme/codes/debts-app-code7-react/src/components/postData.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/apiAccess/config.js",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/navigation/nav.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/debtsList.jsx",["84","85","86"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { API_RAILS } from '../../apiAccess/config.js';\nimport { currentClient } from '../../contexts/currentClient.js';\nimport './debtsList.css';\n\nfunction DebtsList (props) {\n\n    /* Global States */\n    let { value } = useContext(currentClient);\n    \n    /* Local States */\n    \n    const debt = useRef(null);\n\n   \n\n    /* When Item selected, update Context Provider */\n    const handleClick = (e) => {\n        e.preventDefault();\n        /* ID MongoDb */\n        value.updateClientId(1,e.currentTarget.getAttribute(\"value\"));\n        /* ID Local Array */\n        value.updateArrayId(2, e.currentTarget.id);\n    }\n\n    return(\n        <div className=\"d-flex flex-column bd-highlight mb-3 text-center\">\n            ID: {value.id}\n            { value.debtList && value.debtList.reverse().map((item,i) => {\n                return (\n                <div key={i} value={item._id.$oid} id={i} ref={debt} onClick={(e) => handleClick(e)} className=\"debt-single\">\n                    <div className=\"debt-item border border-info p-2 m-2 bd-highlight\"><p>{ item.client.name }</p> <p>R${ item.amount }</p></div>\n                </div>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default DebtsList;","/Users/guilherme/codes/debts-app-code7-react/src/contexts/currentClient.js",[],"/Users/guilherme/codes/debts-app-code7-react/src/components/deleteData.jsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":12,"column":8,"nodeType":"93","messageId":"94","endLine":12,"endColumn":11},{"ruleId":"91","severity":1,"message":"96","line":21,"column":10,"nodeType":"93","messageId":"94","endLine":21,"endColumn":20},{"ruleId":"91","severity":1,"message":"97","line":21,"column":22,"nodeType":"93","messageId":"94","endLine":21,"endColumn":35},{"ruleId":"98","severity":1,"message":"99","line":46,"column":11,"nodeType":"100","endLine":46,"endColumn":44},{"ruleId":"98","severity":1,"message":"99","line":53,"column":17,"nodeType":"100","endLine":53,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":56,"column":17,"nodeType":"100","endLine":56,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":59,"column":17,"nodeType":"100","endLine":59,"endColumn":46},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},{"ruleId":"89","replacedBy":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","severity":1,"message":"107","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":15,"column":11,"nodeType":"100","endLine":15,"endColumn":47},{"ruleId":"91","severity":1,"message":"108","line":1,"column":46,"nodeType":"93","messageId":"94","endLine":1,"endColumn":59},{"ruleId":"91","severity":1,"message":"109","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":36,"column":7,"nodeType":"112","endLine":36,"endColumn":16,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":72,"column":32,"nodeType":"116","messageId":"117","endLine":72,"endColumn":34},{"ruleId":"91","severity":1,"message":"107","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"118","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"119","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":19},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'ClientsIndex' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'selectedId' is assigned a value but never used.","'setSelectedId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["120"],["121"],["120"],["121"],["120"],["121"],"'useEffect' is defined but never used.","'createContext' is defined but never used.","'API_JSON' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'debtList'. Either include it or remove the dependency array.","ArrayExpression",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'API_RAILS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [debtList, idArray]",{"range":"125","text":"126"},[1336,1345],"[debtList, idArray]"]