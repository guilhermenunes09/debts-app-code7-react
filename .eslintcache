[{"/Users/guilherme/codes/debts-app-code7-react/src/reportWebVitals.js":"1","/Users/guilherme/codes/debts-app-code7-react/src/App.js":"2","/Users/guilherme/codes/debts-app-code7-react/src/index.js":"3","/Users/guilherme/codes/debts-app-code7-react/src/pages/clients/index.jsx":"4","/Users/guilherme/codes/debts-app-code7-react/src/components/fetchData.jsx":"5","/Users/guilherme/codes/debts-app-code7-react/src/components/clientCard.jsx":"6","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/new.jsx":"7","/Users/guilherme/codes/debts-app-code7-react/src/components/postData.jsx":"8","/Users/guilherme/codes/debts-app-code7-react/src/apiAccess/config.js":"9","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/debtsList.jsx":"10","/Users/guilherme/codes/debts-app-code7-react/src/contexts/currentClient.js":"11","/Users/guilherme/codes/debts-app-code7-react/src/components/deleteData.jsx":"12","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/newForm.jsx":"13","/Users/guilherme/codes/debts-app-code7-react/src/pages/sessions/new.jsx":"14","/Users/guilherme/codes/debts-app-code7-react/src/pages/registrations/new.jsx":"15","/Users/guilherme/codes/debts-app-code7-react/src/components/localStorage.jsx":"16","/Users/guilherme/codes/debts-app-code7-react/src/components/navbar.jsx":"17"},{"size":362,"mtime":1609639944000,"results":"18","hashOfConfig":"19"},{"size":5142,"mtime":1610395906000,"results":"20","hashOfConfig":"19"},{"size":543,"mtime":1609641051000,"results":"21","hashOfConfig":"19"},{"size":365,"mtime":1610347832000,"results":"22","hashOfConfig":"19"},{"size":906,"mtime":1610347104000,"results":"23","hashOfConfig":"19"},{"size":495,"mtime":1610347588000,"results":"24","hashOfConfig":"19"},{"size":1275,"mtime":1610395717000,"results":"25","hashOfConfig":"19"},{"size":860,"mtime":1610346795000,"results":"26","hashOfConfig":"19"},{"size":578,"mtime":1610347241000,"results":"27","hashOfConfig":"19"},{"size":1457,"mtime":1610395861000,"results":"28","hashOfConfig":"19"},{"size":122,"mtime":1610346763000,"results":"29","hashOfConfig":"19"},{"size":906,"mtime":1610347127000,"results":"30","hashOfConfig":"19"},{"size":6384,"mtime":1610365008000,"results":"31","hashOfConfig":"19"},{"size":2617,"mtime":1610396058000,"results":"32","hashOfConfig":"19"},{"size":2981,"mtime":1610369331000,"results":"33","hashOfConfig":"19"},{"size":154,"mtime":1610347034000,"results":"34","hashOfConfig":"19"},{"size":1249,"mtime":1610367493000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1a53hi0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/guilherme/codes/debts-app-code7-react/src/reportWebVitals.js",[],["78","79"],"/Users/guilherme/codes/debts-app-code7-react/src/App.js",["80","81","82","83"],"\nimport React, { useState, useEffect } from 'react'\nimport { DebtsContext } from './contexts/currentClient.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\nimport './App.css';\n\nimport { API_JSON, API_RAILS } from './apiAccess/config.js';\nimport { axiosGet } from './components/fetchData.jsx';\n\n/* Pages with Components */\nimport Navbar from './components/navbar.jsx';\nimport SessionsNew from './pages/sessions/new.jsx';\nimport DebtsNew from './pages/debts/new';\nimport RegistrationsNew from './pages/registrations/new.jsx';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\n\n\n/* Initial Data Structure */\n// It avoids 'undefined' errors variables\n// Changes in this structure might break the App completely\n// Check API results from https://jsonplaceholder.typicode.com/users\n// and Rails API http://localhost:3000/api/debts (requires authentication)\nconst defaultClient = { \n  id: null,\n  name: null,\n  username: null,\n  email: null,\n  address: {\n      street: null,\n      suite: null,\n      city: null,\n      zipcode: null,\n      geo: {\n          lat: null,\n          lng: null\n      }\n  },\n  phone: null,\n  website: null,\n  company: {\n      name: null,\n      catchPhrase: null,\n      bs: null\n  },\n}\n\nconst initialDebt = {\n  _id: {\n      $oid: null\n  },\n  amount: null,\n  client: defaultClient,\n  reason: null,\n  when: null\n};\n\n\n\nfunction App() {\n\n  /* Clients are the users from jsonplaceholder.typicode.com/users */\n  const [clients, setClients] = useState([defaultClient]);\n  /* Debts are the results from localhost:3000/api/debts */\n  const [debts, setDebts] = useState([initialDebt]);\n  /* SelectedClient is filled each time an item from Debtslist.jsx is cliked */\n  const [selectedClient, setSelectedClient] = useState(initialDebt);\n  /* Same as the above state, but only the ID of the array. */\n  const [selectedIdArray, setSelectedIdArray] = useState(null);\n  /* Makes all inputs to be enabled */\n  const [editMode, setEditMode] = useState(true);\n  /* Check if header authentication is set */\n  const [authorized, setAuthorized] = useState(false);\n\n  let history = useHistory();\n  \n  /* Fetch Data */\n  // All Data requests are triggered only one time per HTTP request\n  const getDebts = () => {\n    axiosGet(API_RAILS).then(response => {\n      if(response && response.status === 200) {\n        setAuthorized(true);\n        setDebts(response.data);\n      }\n      if(response && response.status === 401) {\n        setAuthorized(false);\n      }\n   });\n  }\n\n  /* Users from Jsonplaceholder */\n  const getClients = () => {\n    axiosGet(API_JSON).then(res => {\n      if(res && res.status === 200) {\n        setClients(res.data);\n      }\n      \n    });\n  }\n\n  /* Component Did Mount */\n  useEffect(\n    () => {\n      if(authorized) {\n        getClients();\n        getDebts();\n      }\n    },[authorized]\n  );\n\n  /* Client state watch */\n  useEffect(()=> {\n    if (selectedClient._id.$oid) {\n      updateEditMode(false)\n    } else {\n      updateEditMode(true)\n    }\n  },[selectedClient])\n\n  /* Functions directly related to the UseContext API */\n  const updateSelectedClient = (client) => {\n    setSelectedClient(client);\n  }\n\n  const updateSaveDebts = (debt) => {\n    setDebts(debts => [debt, ...debts]);\n  }\n\n  const updateEditDebts = (debt, selectedIdArray) => {\n    const newDebts = debts;\n    newDebts[selectedIdArray] = debt;\n    setDebts(newDebts);\n  }\n\n  const updateExcludeDebts = (selectedIdArray) => {\n    const newDebts = debts;\n    newDebts.splice(selectedIdArray, 1);\n    setDebts(newDebts);\n  }\n\n  const updateSelectedIdArray = (idArray) => {\n    setSelectedIdArray(idArray)\n  }\n\n  const updateEditMode = (editMode) => {\n    setEditMode(editMode);\n  }\n\n  const updateAuthorized = (authorized) => {\n    setAuthorized(authorized);\n  }\n\n  /* All Context Props and Functions */\n  const value = {\n    clients: clients,\n    debts: debts,\n    selectedClient: selectedClient,\n    selectedIdArray: selectedIdArray,\n    editMode: editMode,\n    authorized: authorized,\n    updateSelectedClient: updateSelectedClient,\n    updateSelectedIdArray: updateSelectedIdArray,\n    updateSaveDebts: updateSaveDebts,\n    updateEditMode: updateEditMode,\n    updateExcludeDebts: updateExcludeDebts,\n    updateAuthorized: updateAuthorized,\n    updateEditDebts: updateEditDebts,\n    initialDebt: initialDebt\n  }\n\n  /* The App understands the user wants to create a new record when none of the clients is selected */\n  const handleClickNew = () => {\n    updateSelectedClient(initialDebt);\n    updateSelectedIdArray(null);\n  }\n\n  return (\n    <DebtsContext.Provider value={value}>\n      <div className=\"App\">\n        <Router history={history}>\n          <Navbar />\n            <Switch >\n              <Route exact path=\"/novo\" component={RegistrationsNew} />\n              <Route exact path=\"/login\" component={SessionsNew} />\n              <Route exact path=\"/\" component={DebtsNew} />  \n            </Switch>\n            )}\n        </Router>\n      </div>\n    </DebtsContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/guilherme/codes/debts-app-code7-react/src/index.js",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/clients/index.jsx",[],["84","85"],"/Users/guilherme/codes/debts-app-code7-react/src/components/fetchData.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/components/clientCard.jsx",["86"],"import React from 'react';\nimport \"./styles/clientCard.css\"\n\n// To be in the Debts Index\n// Not being used\nfunction ClientCard (props) {\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{props.clientCard.name}</h5>\n          <p className=\"card-text\">{props.clientCard.username}</p>\n          <p className=\"card-text\">{props.clientCard.website}</p>\n          <a href=\"#\" className=\"btn btn-primary\">Visitar</a>\n        </div>\n      </div>\n    </>\n  );\n}\n  \nexport default ClientCard;\n  ","/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/new.jsx",["87"],"import React, { useContext, useEffect } from 'react';\nimport { DebtsContext } from '../../contexts/currentClient.js';\nimport DebtsList from './debtsList.jsx';\nimport NewForm from './newForm.jsx';\nimport '../../components/styles/debtsNew.css';\n\n\n// This Component contains 2 other components\n// One is the list of Debts, the other is the form\n\nfunction DebtsNew (props) {\n\n    const value = useContext(DebtsContext);\n\n    useEffect(() => {\n        if(value.authorized === false) {\n            props.history.push('/login');\n        }\n    },[]);\n\n    let title = \"   \";\n    if (value.editMode && value.selectedClient._id.$oid === null) {\n        title = \"Nova Dívida\";\n    } else {\n        title = value.selectedClient._id.$oid ? value.selectedClient.client.name : \"   \";\n    }\n\n    return(\n        <div className=\"container text-left\">\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <DebtsList />\n                </div>\n                <div className=\"col-9\">\n                    <div className=\"debt-new p-3 m-2 bd-highlight\">\n                        <h1>{ title } </h1>\n                        <NewForm />\n                    </div>\n                </div>    \n            </div>\n        </div>\n    )\n}\n\nexport default DebtsNew;","/Users/guilherme/codes/debts-app-code7-react/src/components/postData.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/apiAccess/config.js",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/debtsList.jsx",["88"],"import React, { useRef, useEffect, useContext } from 'react';\nimport { DebtsContext } from '../../contexts/currentClient.js';\nimport './debtsList.css';\n\nfunction DebtsList () {\n\n    const value = useContext(DebtsContext);\n\n    /* Local States */\n    const debt = useRef(null);\n\n    /* When Item selected, update Context Provider */\n    const handleClick = (item, selectedIdArray) => {\n        value.updateSelectedClient(item);\n        value.updateSelectedIdArray(selectedIdArray);\n    }\n    /* UI shows which item is selected on the list */\n    let StyleClass = {\n        selected: \"client-item debt-item-selected m-2 bd-highlight\",\n        notSelected: \"client-item debt-item border border-info m-2 bd-highlight\",\n    }\n\n    const oid = value.selectedClient ? value.selectedClient._id.$oid : 0;\n\n    return(\n        <div className=\"client-item d-flex flex-column bd-highlight mb-3 text-center\">\n            {value.debts.map((item,i) => {\n                return <div key={new Date().getTime() + i } className={oid === item._id.$oid ? StyleClass.selected : StyleClass.notSelected} ref={debt} value={item} id={i}  onClick={() => handleClick(item, i)}><p className=\"d-none d-md-block\">{ item.client.name }</p> <p className=\"d-none d-md-block\">R${ item.amount }</p><p className=\"d-block d-sm-none pt-3\">{item.client.name ? item.client.name.charAt(0) : ''}</p></div>                        \n    \n            })}\n        </div>\n    );\n}\n\nexport default DebtsList;","/Users/guilherme/codes/debts-app-code7-react/src/contexts/currentClient.js",[],"/Users/guilherme/codes/debts-app-code7-react/src/components/deleteData.jsx",[],["89","90"],"/Users/guilherme/codes/debts-app-code7-react/src/pages/debts/newForm.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/sessions/new.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/pages/registrations/new.jsx",["91"],"import React, { useRef, useContext } from 'react';\nimport { DebtsContext } from '../../contexts/currentClient.js';\nimport { setLocalStorage } from '../../components/localStorage.jsx';\nimport { axiosPost } from '../../components/postData.jsx';\nimport { API_RAILS_USER } from '../../apiAccess/config.js';\nimport { Link } from 'react-router-dom';\n\n/* New User (Login) */\nfunction RegistrationsNew (props) {\n\n    const value = useContext(DebtsContext);\n\n    const inputName = useRef(null);\n    const inputEmail = useRef(null);\n    const inputPassword = useRef(null);\n    const inputPasswordConfirmation = useRef(null);\n\n    /* Post Form to the API */\n    const handleClick = () => {\n        const dataPost = {\n            user: {\n                email: inputEmail.current.value,\n                password: inputPassword.current.value,\n                password_confirmation: inputPasswordConfirmation.current.value\n            }\n        }\n        /* Check postData.jsx for more details */\n        axiosPost(dataPost, API_RAILS_USER).then(res => {\n            /* Success */\n            if(res.status === 201) {\n                setLocalStorage('email',res.data.email);\n                setLocalStorage('token', res.data.authentication_token);\n                value.updateAuthorized(true);\n                props.history.push(\"/\");\n            }\n        })\n    }\n\n    return(\n        <div className=\"row justify-content-center\" style={{marginTop: 100}}>\n            <div className=\"dbt-new border border-info p-4 m-2 col-sm-6 p-4\">\n                <div className=\"bd-highlight\">\n                    <form className=\"text-left\">\n                        <h1>Cadastrar</h1>\n                        <form className=\"form-floating\">\n                            <input ref={inputEmail} type=\"email\" className={`form-control mb-3`} id=\"formGroupExampleInput\" placeholder=\"nome@email.com\" />\n                            <label for=\"floatingInputInvalid\">E-mail</label>\n                        </form>\n\n                        <form className=\"form-floating\">\n                            <input ref={inputPassword} type=\"password\" className={`form-control mb-3`} id=\"formGroupExampleInput\" placeholder=\"nome@email.com\" />\n                            <label for=\"floatingInputInvalid\">Senha</label>\n                        </form>\n\n                        <form className=\"form-floating\">\n                            <input ref={inputPasswordConfirmation} type=\"password\" className={`form-control mb-3`} id=\"formGroupExampleInput\" placeholder=\"nome@email.com\" />\n                            <label for=\"floatingInputInvalid\">Confirmação da Senha</label>\n                        </form>\n                    </form>\n                </div>\n                <button onClick={() => handleClick ()} type=\"button\" className=\"btn btn-outline-primary mr-2 m-2\">Registrar</button><br />\n                <Link to='/login' >Logar</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default RegistrationsNew;","/Users/guilherme/codes/debts-app-code7-react/src/components/localStorage.jsx",[],"/Users/guilherme/codes/debts-app-code7-react/src/components/navbar.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":11},{"ruleId":"96","severity":1,"message":"100","line":22,"column":10,"nodeType":"98","messageId":"99","endLine":22,"endColumn":25},{"ruleId":"96","severity":1,"message":"101","line":23,"column":10,"nodeType":"98","messageId":"99","endLine":23,"endColumn":16},{"ruleId":"96","severity":1,"message":"102","line":180,"column":9,"nodeType":"98","messageId":"99","endLine":180,"endColumn":23},{"ruleId":"92","replacedBy":"103"},{"ruleId":"94","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":15,"column":11,"nodeType":"107","endLine":15,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":19,"column":7,"nodeType":"110","endLine":19,"endColumn":9,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":1,"column":25,"nodeType":"98","messageId":"99","endLine":1,"endColumn":34},{"ruleId":"92","replacedBy":"113"},{"ruleId":"94","replacedBy":"114"},{"ruleId":"96","severity":1,"message":"115","line":13,"column":11,"nodeType":"98","messageId":"99","endLine":13,"endColumn":20},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faPlus' is defined but never used.","'handleClickNew' is assigned a value but never used.",["116"],["117"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'value.authorized'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'useEffect' is defined but never used.",["116"],["117"],"'inputName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [props.history, value.authorized]",{"range":"121","text":"122"},[538,540],"[props.history, value.authorized]"]